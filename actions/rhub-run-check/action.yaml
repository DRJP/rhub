name: 'rhub-run-check'
description: |
  Run R-hub checks.
author: 'Gábor Csárdi'

inputs:
  token:
    description: |
      Custom GitHub personal access token. Useful to allow access to
      private repositories or other resources.
  job-config:
    description: |
      The matrix config, as set up by the r-hub-setup action.

runs:
  using: "composite"
  steps:
  - uses: r-lib/actions/check-r-package@v2
    with:
      args: "c('--no-manual', '--as-cran', '--install-args=--build', strsplit(Sys.getenv('CHECK_ARGS'), '[ ]+')[[1]])"
      build_args: "c('--no-manual', strsplit(Sys.getenv('BUILD_ARGS'), '[ ]+')[[1]])"
      upload-results: false
      upload-snapshots: false
    env:
      R_KEEP_PKG_SOURCE: yes

  - name: Output
    if: ${{ always() }}
    run: |
      # Show output of examples and tests
      cat("::group::Show output of examples and tests\n")
      out <- dir("check", recursive=TRUE, pattern = "[.]Rout", full.names = TRUE)
      writeLines("-- Examples and test output ---------------------------------------------")
      for (of in out) {
        writeLines(paste0("-- ", of))
        writeLines(readLines(of, warn = FALSE))
      }
      writeLines("-------------------------------------------------------------------------")
      cat("::endgroup::\n")
    shell: Rscript {0}

  - name: Check for valgrind errors
    if: ${{ always() && matrix.config.label == 'valgrind' }}
    run: |
      # Fail for valgrind errors
      cat("::group::Fail for valgrind errors\n")
      writeLines("-- Checking for valgrind errors -----------------------------------------")
      out <- dir("check", recursive=TRUE, pattern = "[.]Rout", full.names = TRUE)
      fail <- 0
      for (of in out) {
        l <- readLines(of, warn = FALSE)
        if (any(grepl("==[0-9]+== ERROR SUMMARY: [1-9][0-9]* error", l))) {
          fail <- 1
          writeLines(paste0("-- ", of))
          writeLines(l)
        }
      }
      writeLines("-------------------------------------------------------------------------")
      q(save = "no", status = fail)
      cat("::endgroup::\n")
    shell: Rscript {0}

  - name: Save binary package
    if: ${{ always() }}
    run: |
      # Save binary package
      cat("::group::Save binary package\n")
      out <- dir("check", recursive=TRUE, pattern = "00install.out", full.names = TRUE)
      if (length(out) > 0) {
        lns <- readLines(out[1])
        pkgline <- grep("^packaged installation", lns, value = TRUE)
        if (length(pkgline) > 0) {
          pkg <- sub("['’].*$", "", sub("^.*as ['‘]", "", pkgline))
          if (file.copy(pkg, "check")) {
            message("Copied binary package '", pkg, "' to check/")
          } else {
            warning("Could not copy binary package '", pkg, "' to check/")
          }
        } else {
          warning("Could not find binary package.")
        }
      } else {
        warning("Could not find binary package.")
      }
      cat("::endgroup::\n")
    shell: Rscript {0}

  - uses: actions/upload-artifact@v4
    if: ${{ always() }}
    with:
      name: ${{ matrix.config.label }}-${{ github.job }}-${{ matrix.config.id || strategy.job-index }}-results
      path: check
